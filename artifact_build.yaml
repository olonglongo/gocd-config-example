format_version: 10
pipelines:
  artifact_build:
    group: defaultGroup
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      plain: text
    secure_variables:
      secure: AES:ub1/vhbF+/meUGbfyJ7B+g==:EwFd0/nKibamYIZZa1Rj3Q==
    materials:
      git_repo:
        git: https://github.com/laravel/laravel.git
        shallow_clone: false
        auto_update: true
        branch: master
    stages:
    - build-stage:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: manual
          authorization:
            roles:
              - dev
        jobs:
          build:
            timeout: 0
            artifacts:
            - external:
                id: appaa
                store_id: gocd-artifacts-bucket
                configuration:
                  options:
                    # Destination: custom.tgz
                    Destination: "laravel-artifacts/${GO_PIPELINE_NAME}/${GO_PIPELINE_COUNTER}/${GO_STAGE_NAME}"
                    Source: custom.tgz
            tasks:
            - exec:
                command: docker
                arguments:
                  - run
                  - --rm
                  - -v
                  - /var/lib/go-agent/pipelines/build_laravel:/app
                  - -w
                  - /app
                  - php:8.4-fpm
                  - bash
                  - -c
                  - |
                    set -euo pipefail

                    docker-php-source extract
                    cd /usr/src/php/ext/pdo_mysql
                    phpize
                    ./configure
                    make
                    make install

                    cd /usr/local/etc/php/conf.d
                    echo extension=pdo_mysql.so > pdo_mysql.ini
                    cat pdo_mysql.ini

                    apt-get update
                    apt-get install -y git zip

                    cd /app
                    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
                    php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
                    php composer-setup.php
                    php -r "unlink('composer-setup.php');"

                    ./composer.phar install --no-dev --optimize-autoloader
           
            - exec:
                command: sudo
                arguments:
                  - chown
                  - -R
                  - go:go
                  - /var/lib/go-agent/pipelines
            - exec:
                command: tar
                arguments:
                  - -zcvf 
                  - custom.tgz
                  - app


